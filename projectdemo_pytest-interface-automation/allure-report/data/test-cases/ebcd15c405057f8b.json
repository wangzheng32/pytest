{
  "uid" : "ebcd15c405057f8b",
  "name" : "test_personnel_query[data0]",
  "fullName" : "interface_testcase.test_Personnel_query#test_personnel_query",
  "historyId" : "d014fed8c21ef800dbd0c04fd3ac8867",
  "time" : {
    "start" : 1647530751247,
    "stop" : 1647530751247,
    "duration" : 0
  },
  "description" : "\n    用例描述：查询人员档案\n    :param data:\n    :return:\n    ",
  "descriptionHtml" : "<pre><code>用例描述：查询人员档案\n:param data:\n:return:\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: 'NoneType' object is not subscriptable",
  "statusTrace" : "data = {'eq': {'code': 200, 'msg': '查询成功'}, 'request': {'headers': {'Authorization': 'Bearer', 'Content-Type': 'application/j...hod': 'get', 'params': {'pageNum': 1, 'pageSize': 10}, 'url': 'http://123.60.88.124/prod-api/oa/personnel_files/list'}}\n\n    @allure.feature(\"关于人员信息的接口\")\n    @allure.story(\"查询人员档案\")\n    # @pytest.mark.parametrize('data', YamlUntil(\"./data/interface_Project_query.yaml\").read_yaml())\n    @pytest.mark.parametrize('data', yaml_until.load_yaml(\"./data/Yaml/interface_Project_query.yaml\"))\n    def test_personnel_query(data):\n        \"\"\"\n        用例描述：查询人员档案\n        :param data:\n        :return:\n        \"\"\"\n    \n        request = data['request']\n        method = request['method']\n        url = request['url']\n        vales = request[\"params\"]\n        headers = request[\"headers\"]\n>       headers['Authorization'] = headers['Authorization'] + \" \" + yaml_until.read_extract_yaml(\"token\")\n\n..\\..\\Code\\python_project_demo1\\interface_testcase\\test_Personnel_query.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nkey = 'token'\n\n    def read_extract_yaml(key):\n        file = open(\"./extract_data.yaml\", encoding=\"utf-8\")\n        data = yaml.load(file, Loader=yaml.FullLoader)\n>       return data[key]\nE       TypeError: 'NoneType' object is not subscriptable\n\ncommon\\yaml_until.py:16: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "execute_database_sql",
    "time" : {
      "start" : 1647530751244,
      "stop" : 1647530751245,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "afterStages" : [ {
    "name" : "execute_database_sql::0",
    "time" : {
      "start" : 1647530751431,
      "stop" : 1647530751431,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "查询人员档案"
  }, {
    "name" : "feature",
    "value" : "关于人员信息的接口"
  }, {
    "name" : "parentSuite",
    "value" : "interface_testcase"
  }, {
    "name" : "suite",
    "value" : "test_Personnel_query"
  }, {
    "name" : "host",
    "value" : "PC-wz"
  }, {
    "name" : "thread",
    "value" : "33744-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "interface_testcase.test_Personnel_query"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'request': {'url': 'http://123.60.88.124/prod-api/oa/personnel_files/list', 'method': 'get', 'params': {'pageNum': 1, 'pageSize': 10}, 'headers': {'Content-Type': 'application/json', 'Authorization': 'Bearer', 'Cookie': 'Admin-Token='}}, 'eq': {'code': 200, 'msg': '查询成功'}}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "ebcd15c405057f8b.json",
  "parameterValues" : [ "{'request': {'url': 'http://123.60.88.124/prod-api/oa/personnel_files/list', 'method': 'get', 'params': {'pageNum': 1, 'pageSize': 10}, 'headers': {'Content-Type': 'application/json', 'Authorization': 'Bearer', 'Cookie': 'Admin-Token='}}, 'eq': {'code': 200, 'msg': '查询成功'}}" ]
}